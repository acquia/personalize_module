<?php

/**
 * @file
 * Tests for Personalize Fields field_collection support.
 */

class PersonalizeFieldsCollectionTest extends DrupalWebTestCase {

  public static function getInfo() {
    return array(
      'name' => t('Personalize Fields Field Collection Tests'),
      'description' => t('Tests field_collection support of Personalize Fields module (requires field_collection module).'),
      'group' => t('Personalize'),
    );
  }

  function setUp() {
    parent::setUp(array('personalize_fields', 'personalize_test', 'field_collection'));
    // Make sure the default agent is persisted in the database.
    $agent = personalize_agent_load('test-agent');
    personalize_agent_save($agent);
    $this->admin_user = $this->drupalCreateUser(array(
      'access administration pages',
      'administer site configuration',
      'access content',
      'administer content types',
      'administer nodes',
      'bypass node access',
      'manage personalized content',
    ));
  }

  function testFieldCollection() {
    $this->drupalLogin($this->admin_user);

    // Create a field collection field on a node
    $field = array(
      'type' => 'field_collection',
      'field_name' => 'container',
      'cardinality' => 1,
      'settings' => array(),
    );
    field_create_field($field);
    $instance = array(
      'field_name' => 'container',
      'entity_type' => 'node',
      'label' => 'Test Field Collection',
      'bundle' => 'article',
      'required' => FALSE
    );
    field_create_instance($instance);

    // Add a personalizable field to that field collection.
    $field = array(
      'type' => 'text',
      'field_name' => 'article_test_field',
      'cardinality' => -1,
      'settings' => array(
        'personalize' => array(
          'enabled' => 1,
          'agent_type' => 'test_agent',
          'options' => array(
            'test_agent' => array(
              'use_client_side_goal_processing' => 1
            )
          )
        ),
      ),
    );
    field_create_field($field);
    $instance = array(
      'field_name' => 'article_test_field',
      'entity_type' => 'node',
      'label' => 'Personalizable Test Collection Subfield',
      'bundle' => 'article',
      'required' => FALSE
    );
    field_create_instance($instance);

    // Create a test node, fill in 2 variations on a single field collection.
    $edit = array();
    $edit['title'] = $this->randomName(8);
    $edit['article_test_field[und][0][value]'] = 'first variation';
    $edit['article_test_field[und][1][value]'] = 'second variation';
    $this->drupalGet('node/add/article');
    $this->drupalPost(NULL, NULL, t('Add another item'));
    $this->drupalPost(NULL, $edit, t('Save'));

    // Verify something personalizable about it
  }

}

